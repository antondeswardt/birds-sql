DROP DATABASE IF EXISTS BIRDS;

CREATE DATABASE BIRDS;

USE BIRDS;

DROP TABLE IF EXISTS SIGHTING_BIRD_LIST_MAPPINGS;
DROP TABLE IF EXISTS SIGHTINGS;
DROP TABLE IF EXISTS BIRD_LIST_LOCATION_MAPPINGS;
DROP TABLE IF EXISTS BIRD_LISTS;
DROP TABLE IF EXISTS LOCATION_MAPPINGS;
DROP TABLE IF EXISTS LOCATIONS;
DROP TABLE IF EXISTS BIRD_FAMILY_MAPPINGS;
DROP TABLE IF EXISTS BIRD_FAMILYS;
DROP TABLE IF EXISTS BIRDS;
DROP TABLE IF EXISTS BIRDERS;


CREATE TABLE BIRDERS
    (
	BIRDER_ID CHAR (5 BYTE) NOT NULL, 
	BIRDER_USERNAME CHAR (20 BYTE) NOT NULL,
	BIRDER_NAME VARCHAR2 (50 BYTE) NOT NULL,
	BIRDER_PICTURE BLOB
    ) LOGGING
;

CREATE UNIQUE INDEX BIRDER_IDX ON BIRDERS
    ( 
	BIRDER_ID ASC
    ) LOGGING
;

ALTER TABLE BIRDERS
    ADD CONSTRAINT BIRDER_PK PRIMARY KEY ( BIRDER_ID ) LOGGING
;



CREATE TABLE BIRDS
    (
	BIRD_ID CHAR (5 BYTE) NOT NULL,
	BIRD_COMMON_NAME VARCHAR2 (50 BYTE) NOT NULL,
	BIRD_SCIENTIFIC_NAME VARCHAR2 (50 BYTE) NOT NULL,
	BIRD_PICTURE BLOB,
	BIRD_SOUND BLOB
    ) LOGGING
;

CREATE UNIQUE INDEX BIRD_IDX ON BIRDS
    ( 
	BIRD_ID ASC 
    ) LOGGING
;

ALTER TABLE BIRDS
    ADD CONSTRAINT BIRD_PK PRIMARY KEY ( BIRD_ID ) LOGGING
;



CREATE TABLE BIRD_FAMILYS
    (
	BIRD_FAMILY_ID CHAR (5 BYTE) NOT NULL,
	BIRD_FAMILY_NAME VARCHAR2 (50 BYTE) NOT NULL,
	BIRD_FAMILY_DESCRIPTION VARCHAR2 (250 BYTE)
    ) LOGGING
;

CREATE UNIQUE INDEX BIRD_FAMILY_IDX ON BIRD_FAMILYS
    ( 
	BIRD_FAMILY_ID ASC 
    ) LOGGING
;

ALTER TABLE BIRD_FAMILYS
    ADD CONSTRAINT BIRD_FAMILY_PK PRIMARY KEY ( BIRD_FAMILY_ID ) LOGGING
;


CREATE TABLE BIRD_FAMILY_MAPPINGS
    (
	BIRD_ID CHAR (5 BYTE) NOT NULL,
	BIRD_FAMILY_ID CHAR (5 BYTE) NOT NULL
    )
;

ALTER TABLE BIRD_FAMILY_MAPPINGS
    ADD CONSTRAINT BIRD_FAMILY_MAPPING_PK PRIMARY KEY 
	(
		BIRD_ID,
		BIRD_FAMILY_ID
	)
;

ALTER TABLE BIRD_FAMILY_MAPPINGS
    ADD CONSTRAINT BIRD_FAM_MAP_BIRD_FK FOREIGN KEY
    (
	BIRD_ID
    )
    REFERENCES BIRDS
    (
	BIRD_ID
    )
    NOT DEFERRABLE
;

ALTER TABLE BIRD_FAMILY_MAPPINGS
    ADD CONSTRAINT BIRD_FAM_MAP_BIRD_FAM_FK FOREIGN KEY
    (
	BIRD_FAMILY_ID
    )
    REFERENCES BIRD_FAMILYS
    (
	BIRD_FAMILY_ID
    )
    NOT DEFERRABLE
;




CREATE TABLE LOCATIONS
    (
	LOCATION_ID CHAR (5 BYTE) NOT NULL, 
	LOCATION_NAME VARCHAR2 (50 BYTE) NOT NULL,
	LOCATION_TYPE CHAR (10 BYTE) NOT NULL,
	LOCATION_DESCRIPTION VARCHAR2 (250 BYTE),
	LOCATION_PICTURE BLOB,
	LOCATION_SOUND BLOB
    ) LOGGING
;

CREATE UNIQUE INDEX LOCATION_IDX ON LOCATIONS
    (
	LOCATION_ID ASC
    ) LOGGING
;

ALTER TABLE LOCATIONS
    ADD CONSTRAINT LOCATION_PK PRIMARY KEY ( LOCATION_ID )
;

ALTER TABLE LOCATIONS
    ADD CONSTRAINT LOCATION_LOC_TYPE_CHK CHECK 
	(
		LOCATION_TYPE IN (
			'SITE',
			'AREA',
			'COUNTRY',
			'CONTINENT',
			'WORLD'
		)
	)
;




CREATE TABLE LOCATION_MAPPINGS
    (
	CONTAINING_LOCATION_ID CHAR (5 BYTE) NOT NULL,
	CONTAINED_LOCATION_ID CHAR (5 BYTE) NOT NULL
    )
;

ALTER TABLE LOCATION_MAPPINGS
    ADD CONSTRAINT LOCATION_MAPPING_PK PRIMARY KEY 
	(
		CONTAINING_LOCATION_ID,
		CONTAINED_LOCATION_ID
	)
;

ALTER TABLE LOCATION_MAPPINGS
    ADD CONSTRAINT LOC_MAP_CONTAINING_LOC_FK FOREIGN KEY
    (
	CONTAINING_LOCATION_ID
    )
    REFERENCES LOCATIONS
    (
	LOCATION_ID
    )
    NOT DEFERRABLE
;

ALTER TABLE LOCATION_MAPPINGS
    ADD CONSTRAINT LOC_MAP_CONTAINED_LOC_FK FOREIGN KEY
    (
	CONTAINED_LOCATION_ID
    )
    REFERENCES LOCATIONS
    (
	LOCATION_ID
    )
    NOT DEFERRABLE
;




CREATE TABLE BIRD_LISTS
    (
	BIRD_LIST_ID CHAR (5 BYTE) NOT NULL,
	BIRD_LIST_NAME VARCHAR2 (50 BYTE) NOT NULL,
	BIRD_LIST_DESCRIPTION VARCHAR2 (250 BYTE),
	BIRDER_ID CHAR (5 BYTE) NOT NULL
    ) LOGGING
;

CREATE UNIQUE INDEX BIRD_LIST_IDX ON BIRD_LISTS
    ( 
	BIRD_LIST_ID ASC
    ) LOGGING
;

ALTER TABLE BIRD_LISTS
    ADD CONSTRAINT BIRD_LIST_PK PRIMARY KEY ( BIRD_LIST_ID )
;

ALTER TABLE BIRD_LISTS
    ADD CONSTRAINT BIRD_LIST_BIRDER_FK FOREIGN KEY
    (
	BIRDER_ID
    )
    REFERENCES BIRDERS
    (
	BIRDER_ID
    )
    NOT DEFERRABLE
;



CREATE TABLE BIRD_LIST_LOCATION_MAPPINGS
    (
	BIRD_LIST_ID CHAR (5 BYTE) NOT NULL,
	LOCATION_ID CHAR (5 BYTE) NOT NULL
    )
;

ALTER TABLE BIRD_LIST_LOCATION_MAPPINGS
    ADD CONSTRAINT BIRD_LIST_LOCATION_MAPPING_PK PRIMARY KEY 
	(
		BIRD_LIST_ID,
		LOCATION_ID
	)
;

ALTER TABLE BIRD_LIST_LOCATION_MAPPINGS
    ADD CONSTRAINT BIRD_LIST_LOC_MAP_BIRD_LIST_FK FOREIGN KEY
    (
	BIRD_LIST_ID
    )
    REFERENCES BIRD_LISTS
    (
	BIRD_LIST_ID
    )
    NOT DEFERRABLE
;

ALTER TABLE BIRD_LIST_LOCATION_MAPPINGS
    ADD CONSTRAINT BIRD_LIST_LOC_MAP_LOC_FK FOREIGN KEY
    (
	LOCATION_ID
    )
    REFERENCES LOCATIONS
    (
	LOCATION_ID
    )
    NOT DEFERRABLE
;


CREATE TABLE SIGHTINGS
    (
	SIGHTING_ID CHAR (20 BYTE) NOT NULL, 
	BIRD_ID CHAR (5 BYTE) NOT NULL,
	LOCATION_ID CHAR (5 BYTE) NOT NULL,
	BIRDER_ID CHAR (5 BYTE) NOT NULL,
	TIMESTAMP TIMESTAMP,
	YEAR CHAR (4 BYTE),
	MONTH_YEAR CHAR (7 BYTE)
    ) LOGGING
;

CREATE UNIQUE INDEX SIGHTING_IDX ON SIGHTINGS
    ( 
	SIGHTING_ID ASC
    ) LOGGING
;

ALTER TABLE SIGHTINGS
    ADD CONSTRAINT SIGHTING_PK PRIMARY KEY ( SIGHTING_ID )
;


ALTER TABLE SIGHTINGS
    ADD CONSTRAINT SIGHTING_BIRD_FK FOREIGN KEY
    (
	BIRD_ID
    )
    REFERENCES BIRDS
    (
	BIRD_ID
    )
    NOT DEFERRABLE
;

ALTER TABLE SIGHTINGS
    ADD CONSTRAINT SIGHTING_LOCATION_FK FOREIGN KEY
    (
	LOCATION_ID
    )
    REFERENCES LOCATIONS
    (
	LOCATION_ID
    )
    NOT DEFERRABLE
;

ALTER TABLE SIGHTINGS
    ADD CONSTRAINT BIRDLIST_BIRDER_FK FOREIGN KEY
    (
	BIRDER_ID
    )
    REFERENCES BIRDERS
    (
	BIRDER_ID
    )
    NOT DEFERRABLE
;



CREATE TABLE SIGHTING_BIRD_LIST_MAPPINGS
    (
	SIGHTING_ID CHAR (5 BYTE) NOT NULL,
	BIRD_LIST_ID CHAR (5 BYTE) NOT NULL
    )
;

ALTER TABLE SIGHTING_BIRD_LIST_MAPPINGS
    ADD CONSTRAINT SIGHTING_BIRD_LIST_MAPPING_PK PRIMARY KEY 
	(
		SIGHTING_ID,
		BIRD_LIST_ID
	)
;

ALTER TABLE SIGHTING_BIRD_LIST_MAPPINGS
    ADD CONSTRAINT SIGHT_BIRD_LIST_MAP_SIGHT_FK FOREIGN KEY
    (
	SIGHTING_ID
    )
    REFERENCES SIGHTINGS
    (
	SIGHTING_ID
    )
    NOT DEFERRABLE
;

ALTER TABLE SIGHTING_BIRD_LIST_MAPPINGS
    ADD CONSTRAINT SIGHT_BIRD_LIST_MAP_BRD_LST_FK FOREIGN KEY
    (
	BIRD_LIST_ID
    )
    REFERENCES BIRD_LISTS
    (
	BIRD_LIST_ID
    )
    NOT DEFERRABLE
;



